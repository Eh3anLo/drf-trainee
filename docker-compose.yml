services:
  postgres:
    container_name: postgres
    image: postgres:15.8
    environment:
      - TZ=Asia/Tehran
      - POSTGRES_DB=summer
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    networks:
      - main
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    restart: on-failure

  app:
    container_name: app
    build: .
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    depends_on:
      - postgres
    networks:
      - main
    volumes:
      - .:/src
      - backups:/src/backups
    ports:
      - 8000:8000
    environment:
      - TZ=Asia/Tehran
  
  nginx:
    container_name: nginx
    command: nginx -g 'daemon off;'
    restart: always
    image:  docker.arvancloud.ir/nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
     - main
    depends_on:
      - app
    environment:
      - TZ=Asia/Tehran

  celery-beat:
    container_name: celery-beat
    build: .
    command: celery -A config beat -l info
    depends_on:
      - rabbitmq
      - app
    volumes:
    - .:/src
    networks:
      - main
    environment:
      - TZ=Asia/Tehran

  celery_worker:
    container_name: celery-worker
    build: .
    command: sh -c "./wait-for-it.sh postgres:5432 && celery -A config worker --loglevel=info"
    volumes:
      - .:/src
      - backups:/src/backups
      - /var/run/postgresql/.s.PGSQL.5432:/var/run/postgresql/.s.PGSQL.5432
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - TIMEZONE=Asia/Tehran
      - POSTGRES_DB=summer
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_HOST=postgres
    networks:
      - main

    
  rabbitmq:
    image: rabbitmq
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    expose:
      - "5672"
      - "15672"
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - main

networks:
  main:

  

volumes:
  postgres_data:
  backups:
